{"version":3,"sources":["webpack:///./src/IssueDetail.jsx","webpack:///./src/IssueList.jsx","webpack:///./src/IssueTable.jsx"],"names":["IssueDetail","issue","description","SECTION_SIZE","PageLink","params","page","activePage","children","set","React","cloneElement","disabled","search","toString","IssueList","Component","fetchData","match","showError","URLSearchParams","vars","hasSelection","selectedId","get","status","effortMin","parseInt","Number","isNaN","effortMax","id","idInt","isNan","query","data","graphQLFetch","constructor","initialData","store","issueList","issues","pages","selectedIssue","state","closeIssue","bind","deleteIssue","componentDidMount","loadData","componentDidUpdate","prevProps","location","prevSearch","prevId","props","setState","index","prevState","newList","issueUpdate","pathname","history","showSuccess","issueDelete","push","splice","render","startPage","Math","floor","endPage","prevSection","nextSection","items","i","min","IssueListWithToast","withToast","IssueRow","withRouter","selectLocation","editTooltip","closeTooltip","deleteTooltip","onClose","e","preventDefault","onDelete","tableRow","owner","created","toDateString","effort","due","title","IssueTable","issueRows","map"],"mappings":"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","file":"server.888c4f25d0f5e3f5ff5b.hot-update.js","sourcesContent":["import React from 'react';\nexport default function IssueDetail({ issue }) {\n  if (issue) {\n    return (\n      <div>\n        <h3>Description</h3>\n        <pre>{issue.description}</pre>\n      </div>\n); }\n  return null;\n}\n","import React from 'react';\nimport URLSearchParams from 'url-search-params';\nimport { Panel, Pagination } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nimport IssueFilter from './IssueFilter.jsx';\nimport IssueTable from './IssueTable.jsx';\nimport IssueDetail from './IssueDetail.jsx';\nimport graphQLFetch from './graphQLFetch.js';\nimport store from './store.js';\nimport withToast from './withToast.jsx';\n\nconst SECTION_SIZE = 5;\n\nfunction PageLink({\n  params, page, activePage, children,\n}) {\n  params.set('page', page);\n  if (page === 0) return React.cloneElement(children, { disabled: true });\n  return (\n    <LinkContainer\n      isActive={() => page === activePage}\n      to={{ search: `?${params.toString()}` }}\n    >\n      {children}\n    </LinkContainer>\n  );\n}\n\nclass IssueList extends React.Component {\n  static async fetchData(match, search, showError) {\n    const params = new URLSearchParams(search);\n    const vars = { hasSelection: false, selectedId: 0 };\n    if (params.get('status')) vars.status = params.get('status');\n\n    const effortMin = parseInt(params.get('effortMin'), 10);\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\n    const effortMax = parseInt(params.get('effortMax'), 10);\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\n\n    const { params: { id } } = match;\n    const idInt = parseInt(id, 10);\n    if (!Number.isNaN(idInt)) {\n      vars.hasSelection = true;\n      vars.selectedId = idInt;\n    }\n\n    let page = parseInt(params.get('page'), 10);\n    if (Number.isNan(page)) page = 1;\n    vars.page = page;\n\n    const query = `query issueList(\n      $status: StatusType\n      $effortMin: Int\n      $effortMax: Int\n      $hasSelection: Boolean!\n      $selectedId: Int!\n      $page: Int\n    ) {\n      issueList (\n        status: $status\n        effortMin: $effortMin\n        effortMax: $effortMax\n        page: $page\n      ) {\n        issues {\n          id title status owner\n          created effort due\n        }\n        pages\n      }\n      issue(id: $selectedId) @include (if : $hasSelection) {\n        id description\n      }\n    }`;\n\n    const data = await graphQLFetch(query, vars, showError);\n    return data;\n  }\n\n  constructor() {\n    super();\n    const initialData = store.initialData || { issueList: {} };\n    const {\n      issueList: { issues, pages }, issue: selectedIssue, \n    } = initialData;\n\n    delete store.initialData;\n    this.state = {\n      issues,\n      selectedIssue,\n      pages,\n    };\n    this.closeIssue = this.closeIssue.bind(this);\n    this.deleteIssue = this.deleteIssue.bind(this);\n  }\n\n  componentDidMount() {\n    const { issues } = this.state;\n    if (issues == null) this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      location: { search: prevSearch }, \n      match : { params: { id: prevId } } \n    } = prevProps;\n    const { location: { search }, match: { params: { id } } } = this.props;\n    if (prevSearch !== search || prevId !== id) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const { location: { search }, match, showError } = this.props;\n\n    const data = await IssueList.fetchData(match, search, showError);\n    if (data) {\n      this.setState({\n        issues: data.issueList.issues,\n        selectedIssue: data.issue,\n        pages: data.issueList.pages,\n      });\n    }\n  }\n\n  async closeIssue(index) {\n    const query = `mutation issueClose($id: Int!) {\n      issueUpdate(id: $id, changes: { status: Closed }) {\n        id title status owner\n        effort created due description\n      }\n    }`;\n    const { issues } = this.state;\n    const { showError } = this.props;\n    const data = await graphQLFetch(query, { id: issues[index].id }, showError);\n    if (data) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        newList[index] = data.issueUpdate;\n        return { issues: newList };\n      });\n    } else {\n      this.loadData();\n    }\n  }\n\n  async deleteIssue(index) {\n    const query = `mutation issueDelete($id: Int!) {\n      issueDelete(id: $id)\n    }`;\n    const { issues } = this.state;\n    const { location: { pathname, search }, history } = this.props;\n    const { showSuccess, showError } = this.props;\n    const { id } = issues[index];\n    const data = await graphQLFetch(query, { id }, showError);\n    if (data && data.issueDelete) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        if (pathname === `/issues/${id}`) {\n          history.push({ pathname: '/issues', search });\n        }\n        newList.splice(index, 1);\n        showSuccess(`Deleted issue ${id} successfully.`);\n        return { issues: newList };\n      });\n    } else {\n      this.loadData();\n    }\n  }\n\n  render() {\n    const { issues } = this.state;\n    if (issues == null) return null;\n\n    const { selectedIssue, pages } = this.state;\n    const { location: { search } } = this.props;\n    const params = new URLSearchParams(search);\n    let page = parseInt(params.get('page'), 10);\n    if (Number.isNaN(page)) page = 1;\n    const startPage = Math.floor((page - 1) / SECTION_SIZE) * SECTION_SIZE + 1;\n    const endPage = startPage + SECTION_SIZE - 1;\n    const prevSection = startPage === 1 ? 0 : startPage - SECTION_SIZE;\n    const nextSection = endPage >= pages ? 0 : startPage + SECTION_SIZE;\n    const items = [];\n    for (let i = startPage; i <= Math.min(endPage, pages); i += 1) {\n      params.set('page', i);\n      items.push((\n        <PageLink key={i} params={params} activePage={page} page={i}>\n          <Pagination.Item>{i}</Pagination.Item>\n        </PageLink>\n      ));\n    }\n\n    return (\n      <React.Fragment>\n        <Panel>\n          <Panel.Heading>\n            <Panel.Title toggle>Filter</Panel.Title>\n          </Panel.Heading>\n          <Panel.Body collapsible>\n            <IssueFilter urlBase=\"/issues\"/>\n          </Panel.Body>\n        </Panel>\n        <IssueTable\n          issues={issues}\n          closeIssue={this.closeIssue}\n          deleteIssue={this.deleteIssue}\n        />\n\n        <IssueDetail issue={selectedIssue} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst IssueListWithToast = withToast(IssueList);\nIssueListWithToast.fetchData = IssueList.fetchData;\nexport default IssueListWithToast;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport {\n  Button, Glyphicon, Tooltip, OverlayTrigger, Table,\n} from 'react-bootstrap';\n\n\nconst IssueRow = withRouter(({\n  issue,\n  location: { search },\n  closeIssue,\n  deleteIssue,\n  index,\n}) => {\n  const selectLocation = { pathname: `/issues/${issue.id}`, search };\n  const editTooltip = (\n    <Tooltip id=\"close-tooltip\" placement=\"top\">Edit Issue</Tooltip>\n  );\n  const closeTooltip = (\n    <Tooltip id=\"close-tooltip\" placement=\"top\">Close Issue</Tooltip>\n  );\n  const deleteTooltip = (\n    <Tooltip id=\"delete-tooltip\" placement=\"top\">Delete Issue</Tooltip>\n  );\n\n  function onClose(e) {\n    e.preventDefault();\n    closeIssue(index);\n  }\n  function onDelete(e) {\n    e.preventDefault();\n    deleteIssue(index);\n  }\n\n  const tableRow = (\n    <tr>\n      <td>{issue.id}</td>\n      <td>{issue.status}</td>\n      <td>{issue.owner}</td>\n      <td>{issue.created.toDateString()}</td>\n      <td>{issue.effort}</td>\n      <td>{issue.due ? issue.due.toDateString() : ''}</td>\n      <td>{issue.title}</td>\n      <td>\n        <LinkContainer to={`/edit/${issue.id}`}>\n          <OverlayTrigger delayShow={1000} overlay={editTooltip}>\n            <Button bsSize=\"xsmall\">\n              <Glyphicon glyph=\"edit\" />\n            </Button>\n          </OverlayTrigger>\n        </LinkContainer>\n        {' | '}\n        <OverlayTrigger delayShow={1000} overlay={closeTooltip}>\n          <Button bsSize=\"xsmall\" onClick={onClose}>\n            <Glyphicon glyph=\"remove\" />\n          </Button>\n        </OverlayTrigger>\n        {' '}\n        <OverlayTrigger delayShow={1000} overlay={deleteTooltip}>\n          <Button bsSize=\"xsmall\" onClick={onDelete}>\n            <Glyphicon glyph=\"trash\" />\n          </Button>\n        </OverlayTrigger>\n      </td>\n    </tr>\n  );\n\n  return (\n    <LinkContainer to={selectLocation}>{tableRow}</LinkContainer>\n  );\n});\n\nexport default function IssueTable({ issues, closeIssue, deleteIssue }) {\n  const issueRows = issues.map((issue, index) => (\n    <IssueRow\n      key={issue.id}\n      issue={issue}\n      closeIssue={closeIssue}\n      deleteIssue={deleteIssue}\n      index={index}\n    />\n  ));\n\n  return (\n    <Table bordered condensed hover responsive>\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Status</th>\n          <th>Owner</th>\n          <th>Created</th>\n          <th>Effort</th>\n          <th>Due Date</th>\n          <th>Title</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        {issueRows}\n      </tbody>\n    </Table>\n  );\n}\n"],"sourceRoot":""}