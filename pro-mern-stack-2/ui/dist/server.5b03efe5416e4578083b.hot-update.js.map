{"version":3,"sources":["webpack:///./src/IssueList.jsx"],"names":["IssueList","React","Component","fetchData","match","search","showError","params","URLSearchParams","vars","get","status","effortMin","parseInt","Number","isNaN","effortMax","query","data","graphQLFetch","constructor","issues","store","ini","state","closeIssue","bind","deleteIssue","componentDidMount","loadData","componentDidUpdate","prevProps","location","prevSearch","props","setState","issueList","index","id","prevState","newList","issueUpdate","pathname","history","showSuccess","issueDelete","push","splice","render","path","IssueDetail","IssueListWithToast","withToast"],"mappings":"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","file":"server.5b03efe5416e4578083b.hot-update.js","sourcesContent":["import React from 'react';\nimport URLSearchParams from 'url-search-params';\nimport { Route } from 'react-router-dom';\nimport { Panel } from 'react-bootstrap';\n\nimport IssueFilter from './IssueFilter.jsx';\nimport IssueTable from './IssueTable.jsx';\nimport IssueDetail from './IssueDetail.jsx';\nimport graphQLFetch from './graphQLFetch.js';\nimport store from './store.js';\nimport withToast from './withToast.jsx';\n\nclass IssueList extends React.Component {\n  static async fetchData(match, search, showError) {\n    const params = new URLSearchParams(search);\n    const vars = {};\n    if (params.get('status')) vars.status = params.get('status');\n\n    const effortMin = parseInt(params.get('effortMin'), 10);\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\n    const effortMax = parseInt(params.get('effortMax'), 10);\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\n\n    const query = `query issueList(\n      $status: StatusType\n      $effortMin: Int\n      $effortMax: Int\n    ) {\n      issueList (\n        status: $status\n        effortMin: $effortMin\n        effortMax: $effortMax\n      ) {\n        id title status owner\n        created effort due\n      }\n    }`;\n\n    const data = await graphQLFetch(query, vars, showError);\n    return data;\n  }\n\n  constructor() {\n    super();\n    const issues = store.ini\n    this.state = {\n      issues: [],\n    };\n    this.closeIssue = this.closeIssue.bind(this);\n    this.deleteIssue = this.deleteIssue.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { location: { search: prevSearch } } = prevProps;\n    const { location: { search } } = this.props;\n    if (prevSearch !== search) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const { location: { search }, showError } = this.props;\n    const params = new URLSearchParams(search);\n    const vars = {};\n    if (params.get('status')) vars.status = params.get('status');\n\n    const effortMin = parseInt(params.get('effortMin'), 10);\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\n    const effortMax = parseInt(params.get('effortMax'), 10);\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\n\n    const query = `query issueList(\n      $status: StatusType\n      $effortMin: Int\n      $effortMax: Int\n    ) {\n      issueList (\n        status: $status\n        effortMin: $effortMin\n        effortMax: $effortMax\n      ) {\n        id title status owner\n        created effort due\n      }\n    }`;\n\n    const data = await graphQLFetch(query, vars, showError);\n    if (data) {\n      this.setState({ issues: data.issueList });\n    }\n  }\n\n  async closeIssue(index) {\n    const query = `mutation issueClose($id: Int!) {\n      issueUpdate(id: $id, changes: { status: Closed }) {\n        id title status owner\n        effort created due description\n      }\n    }`;\n    const { issues } = this.state;\n    const { showError } = this.props;\n    const data = await graphQLFetch(query, { id: issues[index].id }, showError);\n    if (data) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        newList[index] = data.issueUpdate;\n        return { issues: newList };\n      });\n    } else {\n      this.loadData();\n    }\n  }\n\n  async deleteIssue(index) {\n    const query = `mutation issueDelete($id: Int!) {\n      issueDelete(id: $id)\n    }`;\n    const { issues } = this.state;\n    const { location: { pathname, search }, history } = this.props;\n    const { showSuccess, showError } = this.props;\n    const { id } = issues[index];\n    const data = await graphQLFetch(query, { id }, showError);\n    if (data && data.issueDelete) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        if (pathname === `/issues/${id}`) {\n          history.push({ pathname: '/issues', search });\n        }\n        newList.splice(index, 1);\n        showSuccess(`Deleted issue ${id} successfully.`);\n        return { issues: newList };\n      });\n    } else {\n      this.loadData();\n    }\n  }\n\n  render() {\n    const { issues } = this.state;\n    const { match } = this.props;\n\n    return (\n      <React.Fragment>\n        <Panel>\n          <Panel.Heading>\n            <Panel.Title toggle>Filter</Panel.Title>\n          </Panel.Heading>\n          <Panel.Body collapsible>\n            <IssueFilter />\n          </Panel.Body>\n        </Panel>\n        <IssueTable\n          issues={issues}\n          closeIssue={this.closeIssue}\n          deleteIssue={this.deleteIssue}\n        />\n\n        <Route path={`${match.path}/:id`} component={IssueDetail} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst IssueListWithToast = withToast(IssueList);\nIssueListWithToast.fetchData = IssueList.fetchData;\nexport default IssueListWithToast;\n"],"sourceRoot":""}